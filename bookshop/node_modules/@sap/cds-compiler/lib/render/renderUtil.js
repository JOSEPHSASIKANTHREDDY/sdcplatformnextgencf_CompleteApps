// Common render functions for toCdl.js and toSql.js

'use strict';

const functionsWithoutParams = {
  hana: {
    CURRENT_CONNECTION: {},
    CURRENT_SCHEMA: {},
    CURRENT_TRANSACTION_ISOLATION_LEVEL: {},
    CURRENT_UTCDATE: {},
    CURRENT_UTCTIME: {},
    CURRENT_UTCTIMESTAMP: {},
    SYSUUID: {},
  }
}

// Dialect = 'hana' (only relevance at the moment) | 'cap' | 'sqlite'
function renderFunc( funcName, node, dialect, renderArgs)  {
  if (funcWithoutParen( node, dialect ))
    return funcName;
  else
    return `${funcName}(${renderArgs( node.args )})`;
}

function funcWithoutParen( node, dialect ) {
  if (!node.args)
    return true;
  if (!Array.isArray( node.args ) || node.args.length)
    return false;
  const specials = functionsWithoutParams[dialect];
  return specials && specials[node.func.toUpperCase()];
}

// Type mapping from cds type names to DB type names:
// (in the future, we would introduce an option for the mapping table)
const cdsToSqlTypes = {
  standard: {
    // characters and binaries
    'cds.String': 'NVARCHAR',
    'cds.hana.NCHAR': 'NCHAR',
    'cds.LargeString': 'NCLOB',
    'cds.hana.VARCHAR': 'VARCHAR',
    'cds.hana.CHAR': 'CHAR',
    'cds.hana.CLOB': 'CLOB',
    'cds.Binary': 'VARBINARY',  // not a Standard SQL type, but HANA and MS SQL Server
    'cds.hana.BINARY': 'BINARY',
    'cds.LargeBinary': 'BLOB',
    // numbers: exact and approximate
    'cds.Decimal': 'DECIMAL',
    'cds.DecimalFloat': 'DECIMAL',
    'cds.Integer64': 'BIGINT',
    'cds.Integer': 'INTEGER',
    'cds.hana.SMALLINT': 'SMALLINT',
    'cds.hana.TINYINT': 'TINYINT', // not a Standard SQL type
    'cds.Double': 'DOUBLE',
    'cds.hana.REAL': 'REAL',
    // other: date/time, boolean
    'cds.Date': 'DATE',
    'cds.Time': 'TIME',
    'cds.DateTime': 'TIMESTAMP', // cds-compiler#2758
    'cds.Timestamp': 'TIMESTAMP',
    'cds.Boolean': 'BOOLEAN',
    'cds.UUID': 'NVARCHAR',  // changed to cds.String earlier
    // (TODO: do it later; TODO: why not CHAR or at least VARCHAR?)
  },
  hana: {
    'cds.hana.SMALLDECIMAL': 'SMALLDECIMAL',
    'cds.LocalDate': 'DATE',
    'cds.LocalTime': 'TIME',
    'cds.DateTime': 'SECONDDATE',
    'cds.UTCDateTime': 'SECONDDATE',
    'cds.UTCTimestamp': 'TIMESTAMP',
    'cds.hana.ST_POINT': 'ST_POINT',
    'cds.hana.ST_GEOMETRY': 'ST_GEOMETRY',
  },
  sqlite: {
    'cds.Binary': 'CHAR',
    'cds.hana.BINARY': 'CHAR',
    'cds.hana.SMALLDECIMAL': 'DECIMAL',
  },
};


module.exports = {
  renderFunc,
  cdsToSqlTypes,
}
