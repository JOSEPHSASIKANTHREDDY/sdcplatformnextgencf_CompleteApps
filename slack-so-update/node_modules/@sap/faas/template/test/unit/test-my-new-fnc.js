/*jshint mocha:true*/
'use strict';

const assert = require('assert');
const faas = require('@sap/faas');

describe('hello secret example', () => {

//  ************************************************************************************************

    it('using default values', (done) => {
        faas.test(done,
            {
            },
            async (context) => {
                const result = await context.callFunction('my-new-fnc', {});
                assert.strictEqual(result.type, 'text/plain; charset=utf-8');
                assert.strictEqual(result.data, 'Ok');
            }
        );
    });

//  ************************************************************************************************

    it('using deploy values', (done) => {
        faas.test(done,
            {
                'deploy-values': '../mock/values.yaml'
            },
            async (context) => {
                const result = await context.callFunction('my-new-fnc', {});
                assert.strictEqual(result.type, 'text/plain; charset=utf-8');
                assert.strictEqual(result.data, 'Nice Test!');
            }
        );
    });

//  ************************************************************************************************

    it('read secret text', (done) => {
        faas.test(done,
            {
            },
            async (context) => {
                assert.strictEqual(context.getSecretValueString('my-new-sec', 'text'), 'Hello World!');
            }
        );
    });

//  ************************************************************************************************

    it('read secret json', (done) => {
        faas.test(done,
            {
            },
            async (context) => {
                assert.deepStrictEqual(context.getSecretValueJSON('my-new-sec', 'rv.json'), {
                    'Code': {
                        'Success': 'S',
                        'Failure': 'F'
                    },
                    'Info': {
                        'Success': 'Ok',
                        'Failure': 'Failed'
                    }
                });
            }
        );
    });

//  ************************************************************************************************

});

